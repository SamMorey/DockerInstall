FROM ubuntu:17.10
MAINTAINER max@maxmoulds.org

######### CONSTANTS ######
ARG git-repo-name"tutor-js"
ARG git-repo-url="https://github.com/openstax/tutor-js"
ARG git-repo-dir="/tutor-js"
ENV variablename="testing a variable that works" 

### LOGGING ###
RUN echo "This is a logging message that is very basic"

# Install apt based dependencies required to run Rails as 
# well as RubyGems. As the Ruby image itself is based on a 
# Debian image, we use apt-get to install those.
RUN apt-get update && apt-get install -y \ 
	   postgresql-9.6 postgresql-server-dev-9.6 postgresql-client-9.6 postgresql-contrib-9.6 postgresql-plpython-9.6 \
      ansible npm libxml2-dev libxslt-dev \
      vim python-pip python-dev build-essential memcached screen \
      libxml2-utils nginx postgresql postgresql-client \
      postgresql-contrib libpq-dev nodejs virtualenv \
      git graphviz redis-server qt5-default libqt5webkit5-dev python3 \
      python-pip git git-core curl zlib1g-dev build-essential libssl-dev \
      libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev \
      libxslt1-dev libcurl4-openssl-dev python-software-properties \
      ruby-dev libffi-dev libevent-dev python-virtualenv \
      gcc-5 htop

# Configure the main working directory. This is the base 
# directory used in any further RUN, COPY, and ENTRYPOINT 
# commands.
RUN mkdir -p ${git-repo-dir}
WORKDIR ${git-repo-dir}

RUN echo "Cloning ${git-repo-name} from ${git-repo-url} into ${git-repo-dir}"
# git clone https://github.com/openstax/tutor-js
RUN if cd ${git-repo-dir}; then git pull; else git clone ${git-repo-url}; fi
# variable-ize this... 


#how do i change the directory for run commands

# Copy the Gemfile as well as the Gemfile.lock and install 
# the RubyGems. This is a separate step so the dependencies 
# will be cached unless changes to one of those two files 
# are made.
RUN cd $git-repo-dir
RUN echo "should be in $git-repo-dir..."
RUN echo "trying pwd $(pwd) - and the variable $PWD - is the variable"
COPY Gemfile Gemfile.lock ./ 
RUN gem install bundler && bundle install --jobs 20 --retry 5

# Copy the main application.
COPY . ./

# Expose port 3000 to the Docker host, so we can access it 
# from the outside.
EXPOSE 3000

# The main command to run when the container starts. Also 
# tell the Rails dev server to bind to all interfaces by 
# default.
CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]
