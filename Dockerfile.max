FROM ubuntu:17.10
MAINTAINER max@maxmoulds.org

######### CONSTANTS ######
ARG git_repo_name="tutor-js"
ARG git_repo_url="https://github.com/openstax/tutor-js"
ARG git_repo_dir="/tutor-js"
ARG app_dir="/app"
ARG boxsand_product="tutor"
ENV variablename="testing a variable that works"
ENV NVM_DIR ~/.nvm
ENV NODE_VERSION 8.6.0

# deshelling 

RUN rm /bin/sh && ln -s /bin/bash /bin/sh
RUN which bash
RUN which sh
RUN echo "..moving on..."

# one time RUN using bash instead of sh
RUN ["/bin/bash", "-c", "echo I am now using bash!"]
RUN ["/bin/bash", "-c", "echo I am now using bash!"] echo "YAY bash - $(which bash)"

#sets it permanently
SHELL ["/bin/bash", "-c"]
RUN echo I am now using bash!
RUN which bash
RUN echo $0
# Set debconf to run non-interactively
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

### LOGGING ###
RUN echo 'This is a logging message that is very basic,' $variablename
RUN echo 'testing args, ' $git_repo_name

# Comment
RUN echo 'we are running some # of cool things'
#
# Install apt based dependencies required to run Rails as 
# well as RubyGems. As the Ruby image itself is based on a 
# Debian image, we use apt-get to install those.
RUN apt-get update && apt-get install  -y -q --no-install-recommends \ 
	   postgresql-9.6 postgresql-server-dev-9.6 postgresql-client-9.6 postgresql-contrib-9.6 postgresql-plpython-9.6 \
      software-properties-common libxml2-dev libxslt-dev \
      vim python-pip python-dev build-essential memcached screen \
      libxml2-utils nginx postgresql postgresql-client \
      postgresql-contrib libpq-dev virtualenv \
      git graphviz redis-server qt5-default libqt5webkit5-dev python3 \
      python-pip git git-core curl zlib1g-dev build-essential libssl-dev \
      libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev \
      libxslt1-dev libcurl4-openssl-dev python-software-properties \
      ruby-dev libffi-dev libevent-dev python-virtualenv \
      gcc-5 htop apt-transport-https ca-certificates wget \
   && rm -rf /var/lib/apt/lists/*


RUN curl -sL https://deb.nodesource.com/setup_8.x | bash -
RUN apt-get install -y nodejs nodejs-legacy

# Configure the main working directory. This is the base 
# directory used in any further RUN, COPY, and ENTRYPOINT 
# commands.
RUN mkdir -p $git_repo_dir
# does workdir specify the location inside the container or outside the container
# on the system 
WORKDIR $git_repo_dir

RUN echo 'Cloning '$git_repo_name' from '$git_repo_url' into '$git_repo_dir
# git clone https://github.com/openstax/tutor-js
RUN if cd $git_repo_name; then git pull; else git clone $git_repo_url; fi
# variable-ize this... 


#how do i change the directory for run commands

# Copy the Gemfile as well as the Gemfile.lock and install 
# the RubyGems. This is a separate step so the dependencies 
# will be cached unless changes to one of those two files 
# are made.
RUN cd $git_repo_name
RUN echo 'should be in '$git_repo_dir'...'
RUN echo 'trying pwd '$(pwd)' - and the variable '$PWD' - is the variable'
#COPY Gemfile Gemfile.lock ./ 
RUN pwd
RUN cd $git_repo_name
RUN ls -lah ./$git_repo_name
RUN cd $git_repo_name \
    && ls -lah \
    && npm install

COPY nginx.sites-enabled.config /etc/nginx/sites-enabled/default

RUN service nginx start
#RUN nginx -s reload

RUN echo "Probably not all done"   
RUN echo "Installing CertBot stuff"
#RUN apt-get install software-properties-common
RUN add-apt-repository ppa:certbot/certbot
RUN apt-get update
RUN apt-get install -y python-certbot-nginx

############# PROBABLY for the compose part.... ##########

#RUN certbot --staging -n -d js-tutor.maxcasts.com -m boxsand@maxmoulds.org --agree-tos --nginx
RUN echo "should be done with certbot install, this should not happen often"

#RUN cd $git_repo_name
#RUN ls -lah 
#RUN npm run serve tutor

############### COMPOSE END


# Copy the main application.
# COPY . ./

# Expose port 3000 to the Docker host, so we can access it 
# from the outside.
EXPOSE 8000
RUN ls -lah && pwd
# CMD ["npm", "run", "serve", "tutor"]

# The main command to run when the container starts. Also 
# tell the Rails dev server to bind to all interfaces by 
# default.
#CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]
